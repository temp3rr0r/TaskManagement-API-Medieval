version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/taskmanagement
      - REDIS_URL=redis://redis:6379/0
      - OLLAMA_HOST=http://host.docker.internal:11434
    volumes:
      - .:/app
    command: >
      sh -c "python init_db.py && 
             uvicorn main:app --host 0.0.0.0 --port 8000 --reload --workers 1 --log-level debug --use-colors --reload-dir /app"
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - "**/*.pyc"
            - "**/__pycache__"
        - action: rebuild
          path: requirements.txt
    networks:
      - app-network

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=taskmanagement
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  ollama_data: 